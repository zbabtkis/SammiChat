angular.module("Storage",[]).service("DB",["$rootScope","$window","$q",function(a,b,c){var d=null,e={},f="SammiApp",g="1.0",h="SammiApp Data Storage",i=1e5,j="deviceready",k=!1,l=!1;this.initialize=function(){document.addEventListener(j,function(){d=b.openDatabase(f,g,h,i),k?(a.$emit("dbready"),l=!0):a.$on("dbUpdatesComplete",function(){l=!0,a.$emit("dbready")})})},e.updatesComplete=function(){a.$broadcat("dbUpdatesComplete")},e.query=function(a){var b=[].slice.call(arguments,1),f=c.defer();return d.transaction(function(c){a.apply(e,[c].concat(b))},f.reject,f.resolve),f.promise},e.QUERY=function(a){var b=[].slice.call(arguments,1);console.log(b),a.executeSql.apply(a,b)},e.CREATE_TABLE=function(a,b,c,d,e){var f=[];for(var g in c)c.hasOwnProperty(g)&&f.push([g].concat(c[g]).join(" "));a.executeSql("CREATE TABLE IF NOT EXISTS "+b+" ("+f.join(",")+")",[],d,e)},this.exists=function(){return!!l},this.requestDB=function(){var b=c.defer();return this.exists()?b.resolve(e):a.$on("dbready",function(){b.resolve(e)}),b.promise}}]),function(a){var b=a.module("SammiChat",["Storage","ngRoute","ionic","ionic.ui.sideMenu"]);b.config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/instructions.html",controller:"WordCtrl"}).when("/:vocabId",{templateUrl:"views/words.html",controller:"WordCtrl"}).otherwise({redirectTo:"/"})}]),b.run(["$rootScope","DB","Speak",function(a,b,c){b.initialize(),c.initialize()}])}.call(this,angular),angular.module("Storage").run(["DB",function(a){a.requestDB().then(function(a){a.query(a.CREATE_TABLE,"words",{id:["INTEGER","NOT NULL","PRIMARY KEY","AUTOINCREMENT"],category:["int","NOT NULL"],text:["varchar(255)"]})})}]),angular.module("SammiChat").factory("Word",["DB","$q",function(a,b){var c=function(a){angular.extend(this,a)};return c.prototype.isNew=!0,c.prototype.save=function(){var b=this;a.requestDB().then(function(a){b.isNew?a.query(a.QUERY,"INSERT INTO words (category, text) VALUES ('"+[b.category,b.text].join("','")+"')",[],function(a,c){b.id=c.insertId},function(a,b){console.log(b)}):a.query(a.QUERY,"UPDATE words set category="+b.category,", text="+b.text," WHERE id="+b.id)})},c.prototype.delete=function(){var b=this;a.requestDB().then(function(a){a.query(a.QUERY,"DELETE FROM words WHERE id="+b.id)})},c.query=function(d){var e="",f=b.defer();return a.requestDB().then(function(a){d&&d.category?(e=" WHERE category='"+d.category+"'",a.query(a.QUERY,"SELECT * FROM words"+e,[],function(a,b){for(var d=[],e=0;e<b.rows.length;e++)d.push(new c(b.rows.item(e)));f.resolve(d)},function(a,b){console.log(b)})):a.query(a.QUERY,"SELECT * FROM words",[],function(a,b){for(var d=[],e=0;e<b.rows.length;e++)d.push(new c(b.rows.item(e)));f.resolve(d)})}),f.promise},c}]),angular.module("SammiChat").service("Speak",["$rootScope","$q",function(a,b){return{initialize:function(){var b;"SpeechSynthesisUtterance"in window?(this._say=function(a){var b=new SpeechSynthesisUtterance(a);window.speechSynthesis.speak(b)},this._isLoaded=!0):window.device&&"Android"===window.device.platform?(b=document.createElement("script"),b.src="tts.js",b.async=!0,document.body.appendChild(b),b.onload=function(){this._isLoaded=!0,a.broadcast("ttsLoaded",window.tts.speak)}):this._isLoaded=!0},_say:function(){},_isLoaded:!1,request:function(){var c=b.defer();return this._isLoaded?c.resolve(this._say):a.$on("ttsLoaded",c.resolve),c.promise}}}]),function(a){a.module("SammiChat").directive("sentenceReset",function(){return{restrict:"A",link:function(a,b){b.bind("click",a.resetSentence)}}}),a.module("SammiChat").directive("ngEnter",function(){return{link:function(a,b,c){function d(b){13===b.which&&(a.$apply(function(){a.$eval(c.ngEnter)}),b.preventDefault())}b.bind("keydown keypress",d)}}})}.call(this,angular),function(a){a.module("SammiChat").controller("WordCtrl",["$injector",function(b){var c=b.get("$scope"),d=b.get("$routeParams"),e=b.get("$rootScope"),f=b.get("Word"),g=b.get("Vocabulary"),h=b.get("Speak");g.queryOne({id:d.vocabId}).then(function(a){c.vocabulary=a}),c.newWord=new f,c.noVocabulary=!!d.vocabId,e.currentStatement="",c.words=[],c.load=function(){var a=c.category;a&&f.query({category:a.id}).then(function(a){c.words=a})},c.$watch("category",c.load),c.clear=function(){c.words.forEach(function(a){a.delete()})},c.saveWord=function(a){a.text&&(a.text=a.text.trim(),a.isNew&&(a.category=c.category.id,c.words.push(a)),a.save(),c.newWord=new f)},e.say=function(a){h.request().then(function(b){b(a)})},c.selectWord=function(a){a.active?(e.currentStatement=e.currentStatement.replace(a.text+" ",""),a.active=!1):(e.currentStatement+=a.text+" ",c.say(a.text),a.active=!0)},c.readStatement=function(){c.read(c.currentStatement)},c.resetSentence=function(){e.currentStatement="",c.words.forEach(function(a){a.active=!1}),e.$apply()},c.deleteWord=function(a){var b=c.words.indexOf(a);a.delete(),c.words.splice(b,1)},c.itemButtons=[{text:"Edit",type:"button-calm",onTap:function(b){scope.newWord=a.copy(b),scope.deleteWord(b)}},{text:"Delete",type:"button-assertive",onTap:c.deleteWord}],c.toggleMenu=function(){c.sideMenuController.toggleLeft()}}])}.call(this,angular),function(a){a.module("SammiChat").controller("VocabularyCtrl",["$scope","$location","Vocabulary",function(b,c,d){b.newVocabulary=new d,b.vocabularies=[],d.query().then(function(a){b.vocabularies=a}),b.setVocabulary=function(a){c.path("/"+a.id)},b.saveVocabulary=function(a){a.label=a.label.trim(),a.label&&(b.vocabularies.push(a),b.newVocabulary=new d,a.save())},b.deleteVocabulary=function(a){var c=b.vocabularies.indexOf(a);b.vocabularies.splice(c,1),a.delete()},b.editVocabulary=function(c){b.newVocabulary=a.copy(c),b.deleteVocabulary(c)},b.btns=[{text:"Edit",type:"button-calm",onTap:b.editVocabulary},{text:"Delete",type:"button-assertive",onTap:b.deleteVocabulary}]}])}.call(this,angular),function(a){a.module("SammiChat").service("DatabaseMigrator",["$q","DB",function(a,b){var c=a.defer();b.requestDB().then(function(b){b.changeVersion("1.0","1.1",function(){var d=[b.query(b.QUERY,"ALTER TABLE categories RENAME TO vocabularies"),b.query(b.QUERY,"ALTER TABLE words RENAME COLUMN category TO vocabulary")];a.all(d).then(function(){c.resolve(b)})})}),c.then(function(a){a.updatesComplete()})}])}.call(this,angular);